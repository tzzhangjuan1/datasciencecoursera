Q1:The American Community Survey distributes downloadable data about United States communities. Download the 2006 microdata survey about housing for the state of Idaho using download.file() from here:

    https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv

  and load the data into R. The code book, describing the variable names is here:

    https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf

  Apply strsplit() to split all the names of the data frame on the characters "wgtp". What is the value of the 123 element of the resulting list?

> if(!file.exists("./data")){dir.create("./data")}
> Url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
> download.file(Url,destfile="./data/Idahohouse.csv",method="curl")
> Idahohouse<-read.csv("./data/Idahohouse.csv")

Q2: Load the Gross Domestic Product data for the 190 ranked countries in this data set:

      https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv

    Remove the commas from the GDP numbers in millions of dollars and average them. What is the average?

    Original data sources:

      http://data.worldbank.org/data-catalog/GDP-ranking-table
      
> Url4<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
> download.file(Url4,destfile="./data/GDP.csv",method="curl")
> GDP <- read.csv("GDP.csv", skip = 5, nrows = 190, stringsAsFactors = F, header = F)
> head(GDP)
   V1 V2 V3             V4           V5 V6 V7 V8 V9 V10
1 USA  1 NA  United States  16,244,600     NA NA NA  NA
2 CHN  2 NA          China   8,227,103     NA NA NA  NA
3 JPN  3 NA          Japan   5,959,718     NA NA NA  NA
4 DEU  4 NA        Germany   3,428,131     NA NA NA  NA
5 FRA  5 NA         France   2,612,878     NA NA NA  NA
6 GBR  6 NA United Kingdom   2,471,784     NA NA NA  NA

> GDPV5<-gsub(",","",GDP$V5)
> GDPV5<-as.numeric(GDPV5)
> avgGDP<-mean(GDPV5)
> avgGDP
[1] 377652.4


Q3: In the data set from Question 2 what is a regular expression that would allow you to count the number of countries whose name begins with "United"? Assume that the variable with the country names in it is named countryNames. How many countries begin with United?

> grep("^United",GDP$V4)        # V4 is the "countryNames" variable
[1]  1  6 32                    # 3 countries


Q4: Load the Gross Domestic Product data for the 190 ranked countries in this data set:

      https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv

    Load the educational data from this data set:

      https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv

    Match the data based on the country shortcode. Of the countries for which the end of the fiscal year is available, how many end in June?

    Original data sources:

      http://data.worldbank.org/data-catalog/GDP-ranking-table

      http://data.worldbank.org/data-catalog/ed-stats

> Url4<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
> download.file(Url4,destfile="./data/GDP.csv",method="curl")
> Url5<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
> download.file(Url5,destfile="./data/EDU.csv",method="curl") 
> GDP <- read.csv("GDP.csv", skip = 5, nrows = 190, stringsAsFactors = F, header = F)
> EDU <- read.csv("EDU.csv", stringsAsFactors = F)

> matchedData <- merge(GDP, EDU, by.x = "V1", by.y = "CountryCode")                  # V1 from GDP dataframe, is the "CountryCode" variable
> head(matchedData,n=3)                                                              # "Fiscal year end:Marh 13...." is in the "Special.Notes" column
> table(grepl("Fiscal year end: June",matchedData$"Special.Notes"))
  FALSE  TRUE 
    176    13 
    
    
    
    
> sampleTimes[1:10]
 [1] "2007-01-03" "2007-01-04" "2007-01-05" "2007-01-08" "2007-01-09" "2007-01-10" "2007-01-11" "2007-01-12" "2007-01-16"
[10] "2007-01-17"
> class(sampleTimes)
[1] "Date"
> year<-as.POSIXlt(sampleTimes)$year+1900
> year[1:10]
 [1] 2007 2007 2007 2007 2007 2007 2007 2007 2007 2007
> length(which(year==2012))
    [1] 250 
> week<-wday(lubtime)
> length(which(week==2))
    [1] 531
> length(which(year==2012 & week==2))
[1] 47
